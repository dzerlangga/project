{"ast":null,"code":"import _toConsumableArray from \"D:\\\\react\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"D:\\\\react\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\react\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\react\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\react\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\react\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"D:\\\\react\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"D:\\\\react\\\\src\\\\DemoPages\\\\Dashboards\\\\CRM\\\\Examples\\\\Variation5.js\";\nimport React, { Fragment } from 'react';\nimport ReactCSSTransitionGroup from 'react-addons-css-transition-group';\nimport { Row, Col, Card, CardBody, Button, ButtonGroup, CustomInput, UncontrolledButtonDropdown, DropdownItem, DropdownMenu, DropdownToggle } from 'reactstrap';\nimport BootstrapTable from 'react-bootstrap-table-next';\nimport ReactTable from \"react-table\";\nimport filterFactory, { textFilter } from 'react-bootstrap-table2-filter';\nimport paginationFactory, { PaginationProvider, PaginationListStandalone } from 'react-bootstrap-table2-paginator';\nimport ToolkitProvider, { Search, ColumnToggle } from 'react-bootstrap-table2-toolkit';\nvar Designation = [{\n  name: 'CEO',\n  id_t: 7,\n  id: 7,\n  jumlah: 100,\n  isChecked: false\n}, {\n  name: 'Teknikal Lead',\n  id_t: 8,\n  id: 8,\n  jumlah: 40,\n  isChecked: false\n}, {\n  name: 'Scrum Master',\n  id_t: 9,\n  id: 9,\n  jumlah: 30,\n  isChecked: false\n}, {\n  name: 'FronEnd Lead Programmer',\n  id_t: 10,\n  id: 10,\n  jumlah: 100,\n  isChecked: false\n}, {\n  name: 'BackEnd Programer',\n  id_t: 2,\n  id: 2,\n  jumlah: 50,\n  isChecked: false\n}, {\n  name: 'Intership',\n  id_t: 1,\n  id: 1,\n  jumlah: 100,\n  isChecked: false\n}, {\n  name: 'Android Programer',\n  id_t: 3,\n  id: 3,\n  jumlah: 80,\n  isChecked: false\n}, {\n  name: 'Technical Writter',\n  id_t: 4,\n  id: 4,\n  jumlah: 100,\n  isChecked: false\n}, {\n  name: 'deni',\n  id_t: 5,\n  id: 5,\n  jumlah: 100,\n  isChecked: false\n}];\nvar defaultSorted = [{\n  dataField: 'name',\n  order: 'desc'\n}];\n\nvar sizePerPageRenderer = function sizePerPageRenderer(_ref) {\n  var options = _ref.options,\n      currFirstPageText = _ref.currFirstPageText,\n      onSizePerPageChange = _ref.onSizePerPageChange;\n  return React.createElement(\"div\", {\n    className: \"btn-group\",\n    role: \"group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, options.map(function (option) {\n    var isSelect = currFirstPageText === \"\".concat(option.page);\n    return React.createElement(\"button\", {\n      key: option.text,\n      type: \"button\",\n      onClick: function onClick() {\n        return onSizePerPageChange(option.page);\n      },\n      className: \"btn \".concat(isSelect ? 'btn-secondary' : 'btn-warning'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, option.text);\n  }));\n};\n\nvar options = {\n  custom: true,\n  sizePerPageRenderer: sizePerPageRenderer,\n  totalSize: Designation.length,\n  paginationSize: 'hidden',\n  pageStartIndex: 0,\n  firstPageText: 'First',\n  nextPageText: 'Next',\n  prePageText: 'Previous',\n  lastPageText: 'Last',\n  nextPageTitle: 'First page',\n  hideSizePerPage: 'hidden',\n  alwaysShowAllBtns: 'hidden',\n  sizePerPageList: [{\n    value: 5\n  }]\n};\n\nvar DataTableFixedHeader =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(DataTableFixedHeader, _React$Component);\n\n  function DataTableFixedHeader(props) {\n    var _this;\n\n    _classCallCheck(this, DataTableFixedHeader);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(DataTableFixedHeader).call(this, props));\n    _this.state = {\n      desig: Designation,\n      checkbox: []\n    };\n    _this.onRadioBtnClick = _this.onRadioBtnClick.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.renderEditable = _this.renderEditable.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(DataTableFixedHeader, [{\n    key: \"renderEditable\",\n    value: function renderEditable(cellInfo) {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        style: {\n          backgroundColor: \"#fafafa\"\n        },\n        contentEditable: true,\n        suppressContentEditableWarning: true,\n        onBlur: function onBlur(e) {\n          var desig = _toConsumableArray(_this2.state.desig);\n\n          desig[cellInfo.index][cellInfo.column.id] = e.target.innerHTML;\n\n          _this2.setState({\n            desig: desig\n          });\n        },\n        dangerouslySetInnerHTML: {\n          __html: this.state.desig[cellInfo.index][cellInfo.column.id]\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      });\n    }\n  }, {\n    key: \"onRadioBtnClick\",\n    value: function onRadioBtnClick(rSelected, value) {\n      this.setState({\n        rSelected: rSelected\n      });\n      console.log(value);\n    }\n  }, {\n    key: \"cek\",\n    value: function cek(value) {\n      this.setState({\n        checkbox: this.state.checkbox.concat(value)\n      });\n      console.log(this.state.checkbox);\n    }\n  }, {\n    key: \"oke\",\n    value: function oke(value) {\n      console.log(value);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var desig = this.state.desig;\n      var SearchBar = Search.SearchBar;\n      var ToggleList = ColumnToggle.ToggleList;\n      var expandRow = {\n        renderer: function renderer(row) {\n          return desig.map(function (el) {\n            return React.createElement(\"p\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 136\n              },\n              __self: this\n            }, el.id);\n          });\n        },\n        showExpandColumn: true\n      };\n\n      var CaptionElement = function CaptionElement() {\n        return React.createElement(\"h3\", {\n          style: {\n            borderRadius: '0.25em',\n            textAlign: 'center',\n            color: 'purple',\n            border: '1px solid purple',\n            padding: '0.5em'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 141\n          },\n          __self: this\n        }, \"Custom table\");\n      };\n\n      return React.createElement(Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }, React.createElement(ReactCSSTransitionGroup, {\n        component: \"div\",\n        transitionName: \"TabsAnimation\",\n        transitionAppear: true,\n        transitionAppearTimeout: 0,\n        transitionEnter: false,\n        transitionLeave: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }, React.createElement(Col, {\n        md: \"12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }, React.createElement(Card, {\n        className: \"main-card mb-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }, React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: {\n          paddingBottom: '10px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }, React.createElement(Button, {\n        className: \"btn-dashed\",\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }, \"Tambah Data\")), React.createElement(PaginationProvider, {\n        pagination: paginationFactory(options),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }, function (_ref2) {\n        var paginationProps = _ref2.paginationProps,\n            paginationTableProps = _ref2.paginationTableProps;\n        return React.createElement(\"div\", {\n          className: \"table-responsive\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 169\n          },\n          __self: this\n        }, React.createElement(CaptionElement, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 170\n          },\n          __self: this\n        }), React.createElement(ToolkitProvider, {\n          bootstrap4: true,\n          selectRow: React.createElement(CustomInput, {\n            type: \"checkbox\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 173\n            },\n            __self: this\n          }),\n          keyField: \"id\",\n          condensed: true,\n          columnToggle: true,\n          columns: [// {\n          //     dataField: 'id_t',\n          //     sort: true,\n          //     // formatter:row => {\n          //     //     return(\n          //     //         <div>\n          //     //             <CustomInput type=\"checkbox\" id={row} />\n          //     //         </div>\n          //     //     );\n          //     // }\n          // },\n          {\n            dataField: 'id',\n            text: 'Product ID',\n            sort: true,\n            events: {\n              onClick: function onClick(e, column, columnIndex, row, rowIndex) {\n                console.log(e);\n                console.log(column);\n                console.log(columnIndex);\n                console.log(row);\n                console.log(rowIndex);\n                alert(row.id);\n              }\n            }\n          }, {\n            dataField: 'name',\n            text: 'Product Name',\n            sort: true\n          }, {\n            dataField: 'jumlah',\n            text: 'Jumlah',\n            sort: true,\n            align: 'center'\n          }, {\n            dataField: 'jumlah',\n            isDummyField: false,\n            align: 'center',\n            text: 'jumlah Info',\n            formatter: function formatter(row) {\n              if (row >= 50) {\n                return React.createElement(\"div\", {\n                  className: \"d-block w-100 text-center\",\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 226\n                  },\n                  __self: this\n                }, React.createElement(\"span\", {\n                  className: \"badge badge-success\",\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 227\n                  },\n                  __self: this\n                }, \" Completed\"));\n              } else {\n                return React.createElement(\"div\", {\n                  className: \"d-block w-100 text-center\",\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 232\n                  },\n                  __self: this\n                }, React.createElement(\"span\", {\n                  className: \"badge badge-danger\",\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 233\n                  },\n                  __self: this\n                }, \" Uncompleted\"));\n              }\n            }\n          }, {\n            dataField: 'actions',\n            isDummyField: true,\n            align: 'center',\n            text: 'Actions',\n            formatter: function formatter(cellContent, row) {\n              return React.createElement(\"div\", {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 246\n                },\n                __self: this\n              }, React.createElement(\"div\", {\n                className: \"d-block w-100 text-center\",\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 247\n                },\n                __self: this\n              }, React.createElement(UncontrolledButtonDropdown, {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 248\n                },\n                __self: this\n              }, React.createElement(DropdownToggle, {\n                caret: true,\n                className: \"btn-icon btn-icon-only btn btn-link\",\n                color: \"link\",\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 249\n                },\n                __self: this\n              }, React.createElement(\"i\", {\n                className: \"lnr-menu-circle btn-icon-wrapper\",\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 250\n                },\n                __self: this\n              })), React.createElement(DropdownMenu, {\n                right: true,\n                className: \"rm-pointers dropdown-menu-hover-link\",\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 252\n                },\n                __self: this\n              }, React.createElement(DropdownItem, {\n                header: true,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 253\n                },\n                __self: this\n              }, \"Header\"), React.createElement(DropdownItem, {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 254\n                },\n                __self: this\n              }, React.createElement(\"i\", {\n                className: \"dropdown-icon lnr-inbox\",\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 255\n                },\n                __self: this\n              }, \" \"), React.createElement(\"span\", {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 256\n                },\n                __self: this\n              }, \"Menus\")), React.createElement(DropdownItem, {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 258\n                },\n                __self: this\n              }, React.createElement(\"i\", {\n                className: \"dropdown-icon lnr-file-empty\",\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 259\n                },\n                __self: this\n              }, \" \"), React.createElement(\"span\", {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 260\n                },\n                __self: this\n              }, \"Settings\")), React.createElement(DropdownItem, {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 262\n                },\n                __self: this\n              }, React.createElement(\"i\", {\n                className: \"dropdown-icon lnr-book\",\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 263\n                },\n                __self: this\n              }, \" \"), React.createElement(\"span\", {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 264\n                },\n                __self: this\n              }, \"Actions\")), React.createElement(DropdownItem, {\n                divider: true,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 266\n                },\n                __self: this\n              }), React.createElement(DropdownItem, {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 267\n                },\n                __self: this\n              }, React.createElement(\"i\", {\n                className: \"dropdown-icon lnr-picture\",\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 268\n                },\n                __self: this\n              }, \" \"), React.createElement(\"span\", {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 269\n                },\n                __self: this\n              }, \"Dividers\"))))));\n            }\n          }],\n          data: desig,\n          search: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 171\n          },\n          __self: this\n        }, function (toolkitprops) {\n          return React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 285\n            },\n            __self: this\n          }, React.createElement(ToggleList, Object.assign({}, toolkitprops.columnToggleProps, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 286\n            },\n            __self: this\n          })), React.createElement(\"hr\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 287\n            },\n            __self: this\n          }), React.createElement(SearchBar, Object.assign({}, toolkitprops.searchProps, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 288\n            },\n            __self: this\n          })), React.createElement(BootstrapTable, Object.assign({\n            striped: true,\n            selectRow: {\n              mode: 'checkbox',\n              clickToSelect: true\n            },\n            expandRow: expandRow,\n            hover: true\n          }, toolkitprops.baseProps, {\n            filter: filterFactory(),\n            defaultSorted: defaultSorted\n          }, paginationTableProps, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 289\n            },\n            __self: this\n          })));\n        }), React.createElement(PaginationListStandalone, Object.assign({}, paginationProps, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 303\n          },\n          __self: this\n        })));\n      })))), React.createElement(Col, {\n        md: \"12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 313\n        },\n        __self: this\n      }, React.createElement(Card, {\n        className: \"main-card mb-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 314\n        },\n        __self: this\n      }, React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 315\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: {\n          paddingBottom: '10px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 316\n        },\n        __self: this\n      }, React.createElement(Button, {\n        className: \"btn-dashed\",\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 317\n        },\n        __self: this\n      }, \"Tambah Data\")), React.createElement(ReactTable, {\n        data: desig,\n        columns: [{\n          Header: \"Name\",\n          columns: [{\n            Header: \"Check\",\n            filterable: false,\n            width: 100,\n            Cell: function Cell(row) {\n              return React.createElement(\"div\", {\n                className: \"d-block w-100 text-center\",\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 334\n                },\n                __self: this\n              }, React.createElement(CustomInput, {\n                type: \"checkbox\",\n                id: row.original.id_t,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 335\n                },\n                __self: this\n              }));\n            }\n          }, {\n            Header: \"First Name\",\n            accessor: 'name',\n            Cell: this.renderEditable\n          }, {\n            Header: \"Last Name\",\n            accessor: 'jumlah'\n          }]\n        }, {\n          Header: \"Info\",\n          columns: [{\n            Header: \"Age\",\n            filterable: false,\n            accessor: 'jumlah',\n            Cell: function Cell(row) {\n              if (row.original.jumlah >= 50) {\n                return React.createElement(\"div\", {\n                  className: \"d-block w-100 text-center\",\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 362\n                  },\n                  __self: this\n                }, React.createElement(\"span\", {\n                  className: \"btn btn-success\",\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 363\n                  },\n                  __self: this\n                }, \"Completed\"));\n              } else {\n                return React.createElement(\"div\", {\n                  className: \"d-block w-100 text-center\",\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 368\n                  },\n                  __self: this\n                }, React.createElement(\"span\", {\n                  onClick: function onClick() {\n                    return _this3.oke(row.original.id);\n                  },\n                  className: \"btn btn-danger\",\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 369\n                  },\n                  __self: this\n                }, \"Uncompleted\"));\n              }\n            }\n          }]\n        }],\n        filterable: true,\n        pageSize: 5,\n        showPageSizeOptions: false,\n        showPageJump: false,\n        showPaginationBottom: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 321\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        style: {\n          paddingTop: '10px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 383\n        },\n        __self: this\n      }, React.createElement(ButtonGroup, {\n        size: \"lg\",\n        className: \"mb-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 384\n        },\n        __self: this\n      }, React.createElement(Button, {\n        className: \"btn-dashed\",\n        color: \"primary\",\n        onClick: function onClick() {\n          return _this3.onRadioBtnClick(1, 'dandi');\n        },\n        active: this.state.rSelected === 1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 385\n        },\n        __self: this\n      }, \"First\"), React.createElement(Button, {\n        className: \"btn-dashed\",\n        color: \"primary\",\n        onClick: function onClick() {\n          return _this3.onRadioBtnClick(2, 'deni');\n        },\n        active: this.state.rSelected === 2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 388\n        },\n        __self: this\n      }, \"Next\"), React.createElement(Button, {\n        className: \"btn-dashed\",\n        color: \"primary\",\n        onClick: function onClick() {\n          return _this3.onRadioBtnClick(3, 'oke');\n        },\n        active: this.state.rSelected === 3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 391\n        },\n        __self: this\n      }, \"Previous\"), React.createElement(Button, {\n        className: \"btn-dashed\",\n        color: \"primary\",\n        onClick: function onClick() {\n          return _this3.onRadioBtnClick(4, 'mantap');\n        },\n        active: this.state.rSelected === 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 394\n        },\n        __self: this\n      }, \"last\")))))))));\n    }\n  }]);\n\n  return DataTableFixedHeader;\n}(React.Component);\n\nexport { DataTableFixedHeader as default };","map":{"version":3,"sources":["D:\\react\\src\\DemoPages\\Dashboards\\CRM\\Examples\\Variation5.js"],"names":["React","Fragment","ReactCSSTransitionGroup","Row","Col","Card","CardBody","Button","ButtonGroup","CustomInput","UncontrolledButtonDropdown","DropdownItem","DropdownMenu","DropdownToggle","BootstrapTable","ReactTable","filterFactory","textFilter","paginationFactory","PaginationProvider","PaginationListStandalone","ToolkitProvider","Search","ColumnToggle","Designation","name","id_t","id","jumlah","isChecked","defaultSorted","dataField","order","sizePerPageRenderer","options","currFirstPageText","onSizePerPageChange","map","option","isSelect","page","text","custom","totalSize","length","paginationSize","pageStartIndex","firstPageText","nextPageText","prePageText","lastPageText","nextPageTitle","hideSizePerPage","alwaysShowAllBtns","sizePerPageList","value","DataTableFixedHeader","props","state","desig","checkbox","onRadioBtnClick","bind","renderEditable","cellInfo","backgroundColor","e","index","column","target","innerHTML","setState","__html","rSelected","console","log","concat","SearchBar","ToggleList","expandRow","renderer","row","el","showExpandColumn","CaptionElement","borderRadius","textAlign","color","border","padding","paddingBottom","paginationProps","paginationTableProps","sort","events","onClick","columnIndex","rowIndex","alert","align","isDummyField","formatter","cellContent","toolkitprops","columnToggleProps","searchProps","mode","clickToSelect","baseProps","Header","columns","filterable","width","Cell","original","accessor","oke","paddingTop","Component"],"mappings":"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","sourcesContent":["import React, { Fragment } from 'react'\r\nimport ReactCSSTransitionGroup from 'react-addons-css-transition-group';\r\n\r\nimport {\r\n    Row, Col,\r\n    Card, CardBody, Button, ButtonGroup,\r\n    CustomInput, UncontrolledButtonDropdown, DropdownItem, DropdownMenu, DropdownToggle\r\n} from 'reactstrap';\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport ReactTable from \"react-table\";\r\nimport filterFactory, { textFilter } from 'react-bootstrap-table2-filter';\r\nimport paginationFactory, { PaginationProvider, PaginationListStandalone } from 'react-bootstrap-table2-paginator';\r\nimport ToolkitProvider, { Search , ColumnToggle } from 'react-bootstrap-table2-toolkit';\r\n\r\n\r\nconst Designation = [\r\n    { name: 'CEO', id_t: 7, id: 7, jumlah: 100, isChecked: false },\r\n    { name: 'Teknikal Lead', id_t: 8, id: 8, jumlah: 40, isChecked: false },\r\n    { name: 'Scrum Master', id_t: 9, id: 9, jumlah: 30, isChecked: false },\r\n    { name: 'FronEnd Lead Programmer', id_t: 10, id: 10, jumlah: 100, isChecked: false },\r\n    { name: 'BackEnd Programer', id_t: 2, id: 2, jumlah: 50, isChecked: false },\r\n    { name: 'Intership', id_t: 1, id: 1, jumlah: 100, isChecked: false },\r\n    { name: 'Android Programer', id_t: 3, id: 3, jumlah: 80, isChecked: false },\r\n    { name: 'Technical Writter', id_t: 4, id: 4, jumlah: 100, isChecked: false },\r\n    { name: 'deni', id_t: 5, id: 5, jumlah: 100, isChecked: false },\r\n\r\n\r\n\r\n]\r\n\r\nconst defaultSorted = [{\r\n    dataField: 'name',\r\n    order: 'desc'\r\n\r\n}];\r\n\r\n\r\nconst sizePerPageRenderer = ({\r\n    options,\r\n    currFirstPageText,\r\n    onSizePerPageChange\r\n}) => (\r\n        <div className=\"btn-group\" role=\"group\">\r\n            {\r\n                options.map((option) => {\r\n                    const isSelect = currFirstPageText === `${option.page}`;\r\n                    return (\r\n                        <button\r\n                            key={option.text}\r\n                            type=\"button\"\r\n                            onClick={() => onSizePerPageChange(option.page)}\r\n                            className={`btn ${isSelect ? 'btn-secondary' : 'btn-warning'}`}\r\n                        >\r\n                            {option.text}\r\n                        </button>\r\n                    );\r\n                })\r\n            }\r\n        </div>\r\n    );\r\n\r\n\r\n\r\nconst options = {\r\n    custom: true,\r\n    sizePerPageRenderer,\r\n    totalSize: Designation.length,\r\n    paginationSize: 'hidden',\r\n    pageStartIndex: 0,\r\n    firstPageText: 'First',\r\n    nextPageText: 'Next',\r\n    prePageText: 'Previous',\r\n    lastPageText: 'Last',\r\n    nextPageTitle: 'First page',\r\n    hideSizePerPage: 'hidden',\r\n    alwaysShowAllBtns: 'hidden',\r\n    sizePerPageList: [{\r\n        value: 5\r\n    }],\r\n\r\n};\r\n\r\nexport default class DataTableFixedHeader extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            desig: Designation,\r\n            checkbox: [],\r\n        };\r\n        this.onRadioBtnClick = this.onRadioBtnClick.bind(this);\r\n        this.renderEditable = this.renderEditable.bind(this);\r\n    }\r\n\r\n    renderEditable(cellInfo) {\r\n        return (\r\n            <div\r\n                style={{ backgroundColor: \"#fafafa\" }}\r\n                contentEditable\r\n                suppressContentEditableWarning\r\n                onBlur={e => {\r\n                    const desig = [...this.state.desig];\r\n                    desig[cellInfo.index][cellInfo.column.id] = e.target.innerHTML;\r\n                    this.setState({ desig });\r\n                }}\r\n                dangerouslySetInnerHTML={{\r\n                    __html: this.state.desig[cellInfo.index][cellInfo.column.id]\r\n                }}\r\n            />\r\n        );\r\n    }\r\n\r\n    onRadioBtnClick(rSelected, value) {\r\n        this.setState({ rSelected });\r\n        console.log(value)\r\n    }\r\n\r\n    cek(value) {\r\n        this.setState({\r\n            checkbox: this.state.checkbox.concat(value)\r\n        })\r\n        console.log(this.state.checkbox)\r\n    }\r\n\r\n    oke(value) {\r\n        console.log(value)\r\n    }\r\n    \r\n\r\n    render() {\r\n        const { desig } = this.state;\r\n        const { SearchBar } = Search;\r\n        const { ToggleList } = ColumnToggle;\r\n        const expandRow = {\r\n            renderer: row =>( \r\n                desig.map(el => (\r\n                    <p>{el.id}</p>\r\n                ))\r\n            ), \r\n            showExpandColumn: true\r\n        };\r\n        const CaptionElement = () => <h3 style={{ borderRadius: '0.25em', textAlign: 'center', color: 'purple', border: '1px solid purple', padding: '0.5em' }}>Custom table</h3>;\r\n        return (\r\n            <Fragment>\r\n                <ReactCSSTransitionGroup\r\n                    component=\"div\"\r\n                    transitionName=\"TabsAnimation\"\r\n                    transitionAppear={true}\r\n                    transitionAppearTimeout={0}\r\n                    transitionEnter={false}\r\n                    transitionLeave={false}>\r\n                    <Row>\r\n\r\n                        <Col md=\"12\">\r\n                            <Card className=\"main-card mb-3\">\r\n                                <CardBody>\r\n                                    <div style={{ paddingBottom: '10px' }}>\r\n                                        <Button className=\"btn-dashed\" color=\"primary\">\r\n                                            Tambah Data\r\n                                            </Button>\r\n                                    </div>\r\n                                    <PaginationProvider\r\n                                        pagination={paginationFactory(options)}\r\n                                    >\r\n                                        {\r\n                                            ({\r\n                                                paginationProps,\r\n                                                paginationTableProps\r\n                                            }) => (\r\n                                                    <div className=\"table-responsive\">\r\n                                                        <CaptionElement/>\r\n                                                        <ToolkitProvider\r\n                                                            bootstrap4\r\n                                                            selectRow={<CustomInput type=\"checkbox\"  />}\r\n                                                            keyField=\"id\"  \r\n                                                            condensed\r\n                                                            columnToggle\r\n                                                            columns={[\r\n                                                                // {\r\n                                                                //     dataField: 'id_t',\r\n                                                                //     sort: true,\r\n                                                                //     // formatter:row => {\r\n                                                                //     //     return(\r\n                                                                //     //         <div>\r\n                                                                //     //             <CustomInput type=\"checkbox\" id={row} />\r\n                                                                //     //         </div>\r\n                                                                //     //     );\r\n                                                                //     // }\r\n\r\n                                                                // },\r\n                                                                {\r\n                                                                    dataField: 'id',\r\n                                                                    text: 'Product ID',\r\n                                                                    sort: true,\r\n                                                                    events: {\r\n                                                                        onClick: (e, column, columnIndex, row, rowIndex) => {\r\n                                                                            console.log(e);\r\n                                                                            console.log(column);\r\n                                                                            console.log(columnIndex);\r\n                                                                            console.log(row);\r\n                                                                            console.log(rowIndex);\r\n                                                                            alert(row.id);\r\n                                                                        }\r\n                                                                    }\r\n\r\n                                                                },\r\n                                                                {\r\n                                                                    dataField: 'name',\r\n                                                                    text: 'Product Name',\r\n                                                                    sort: true,\r\n                                                                },\r\n                                                                {\r\n                                                                    dataField: 'jumlah',\r\n                                                                    text: 'Jumlah',\r\n                                                                    sort: true,\r\n                                                                    align: 'center',\r\n\r\n                                                                },\r\n                                                                {\r\n                                                                    dataField: 'jumlah',\r\n                                                                    isDummyField: false,\r\n                                                                    align: 'center',\r\n                                                                    text: 'jumlah Info',\r\n                                                                    formatter: row => {\r\n                                                                        if (row >= 50) {\r\n                                                                            return (\r\n                                                                                <div className=\"d-block w-100 text-center\">\r\n                                                                                    <span className=\"badge badge-success\"> Completed</span>\r\n                                                                                </div>\r\n                                                                            );\r\n                                                                        } else {\r\n                                                                            return (\r\n                                                                                <div className=\"d-block w-100 text-center\">\r\n                                                                                    <span className=\"badge badge-danger\"> Uncompleted</span>\r\n                                                                                </div>\r\n                                                                            );\r\n                                                                        }\r\n                                                                    }\r\n                                                                },\r\n                                                                {\r\n                                                                    dataField: 'actions',\r\n                                                                    isDummyField: true,\r\n                                                                    align: 'center',\r\n                                                                    text: 'Actions',\r\n                                                                    formatter: (cellContent, row) => {\r\n                                                                        return (\r\n                                                                            <div>\r\n                                                                                <div className=\"d-block w-100 text-center\">\r\n                                                                                    <UncontrolledButtonDropdown>\r\n                                                                                        <DropdownToggle caret className=\"btn-icon btn-icon-only btn btn-link\" color=\"link\">\r\n                                                                                            <i className=\"lnr-menu-circle btn-icon-wrapper\" />\r\n                                                                                        </DropdownToggle>\r\n                                                                                        <DropdownMenu right className=\"rm-pointers dropdown-menu-hover-link\">\r\n                                                                                            <DropdownItem header>Header</DropdownItem>\r\n                                                                                            <DropdownItem>\r\n                                                                                                <i className=\"dropdown-icon lnr-inbox\"> </i>\r\n                                                                                                <span>Menus</span>\r\n                                                                                            </DropdownItem>\r\n                                                                                            <DropdownItem>\r\n                                                                                                <i className=\"dropdown-icon lnr-file-empty\"> </i>\r\n                                                                                                <span>Settings</span>\r\n                                                                                            </DropdownItem>\r\n                                                                                            <DropdownItem>\r\n                                                                                                <i className=\"dropdown-icon lnr-book\"> </i>\r\n                                                                                                <span>Actions</span>\r\n                                                                                            </DropdownItem>\r\n                                                                                            <DropdownItem divider />\r\n                                                                                            <DropdownItem>\r\n                                                                                                <i className=\"dropdown-icon lnr-picture\"> </i>\r\n                                                                                                <span>Dividers</span>\r\n                                                                                            </DropdownItem>\r\n                                                                                        </DropdownMenu>\r\n                                                                                    </UncontrolledButtonDropdown>\r\n                                                                                </div>\r\n                                                                            </div>\r\n                                                                        );\r\n                                                                    }\r\n                                                                },\r\n                                                            ]}\r\n                                                            data={desig}    \r\n                                                            search\r\n                                                            >\r\n\r\n                                                            {\r\n                                                                toolkitprops => (\r\n                                                                    <div>\r\n                                                                        <ToggleList {...toolkitprops.columnToggleProps} />\r\n                                                                        <hr />\r\n                                                                        <SearchBar {...toolkitprops.searchProps} />\r\n                                                                        <BootstrapTable\r\n                                                                            striped\r\n                                                                            selectRow={{ mode: 'checkbox', clickToSelect: true }}\r\n                                                                            expandRow={expandRow}\r\n                                                                            hover\r\n                                                                            {...toolkitprops.baseProps}\r\n                                                                            filter={filterFactory()}\r\n                                                                            defaultSorted={defaultSorted}\r\n                                                                            {...paginationTableProps}\r\n                                                                        />\r\n                                                                    </div>\r\n                                                                )\r\n                                                            }\r\n                                                        </ToolkitProvider>\r\n                                                        <PaginationListStandalone {...paginationProps} />\r\n                                                    </div>\r\n                                                )\r\n                                        }\r\n                                    </PaginationProvider>\r\n                                </CardBody>\r\n                            </Card>\r\n                        </Col>\r\n\r\n\r\n                        <Col md=\"12\">\r\n                            <Card className=\"main-card mb-3\">\r\n                                <CardBody>\r\n                                    <div style={{ paddingBottom: '10px' }}>\r\n                                        <Button className=\"btn-dashed\" color=\"primary\">\r\n                                            Tambah Data\r\n                                            </Button>\r\n                                    </div>\r\n                                    <ReactTable\r\n                                        data={desig}\r\n\r\n                                        columns={[\r\n                                            {\r\n                                                Header: \"Name\",\r\n                                                columns: [\r\n                                                    {\r\n                                                        Header: \"Check\",\r\n                                                        filterable: false,\r\n                                                        width: 100,\r\n                                                        Cell: row => {\r\n                                                            return (\r\n                                                                <div className=\"d-block w-100 text-center\">\r\n                                                                    <CustomInput type=\"checkbox\" id={row.original.id_t} />\r\n                                                                </div>\r\n                                                            );\r\n                                                        }\r\n                                                    },\r\n                                                    {\r\n                                                        Header: \"First Name\",\r\n                                                        accessor: 'name',\r\n                                                        Cell: this.renderEditable\r\n\r\n                                                    },\r\n                                                    {\r\n                                                        Header: \"Last Name\",\r\n                                                        accessor: 'jumlah'\r\n\r\n                                                    }\r\n                                                ]\r\n                                            },\r\n                                            {\r\n                                                Header: \"Info\",\r\n                                                columns: [{\r\n                                                    Header: \"Age\",\r\n                                                    filterable: false,\r\n                                                    accessor: 'jumlah',\r\n                                                    Cell: row => {\r\n                                                        if (row.original.jumlah >= 50) {\r\n                                                            return (\r\n                                                                <div className=\"d-block w-100 text-center\">\r\n                                                                    <span className=\"btn btn-success\">Completed</span>\r\n                                                                </div>\r\n                                                            );\r\n                                                        } else {\r\n                                                            return (\r\n                                                                <div className=\"d-block w-100 text-center\">\r\n                                                                    <span onClick={() => this.oke(row.original.id)} className=\"btn btn-danger\">Uncompleted</span>\r\n                                                                </div>\r\n                                                            );\r\n                                                        }\r\n                                                    }\r\n                                                }]\r\n                                            }\r\n                                        ]}\r\n                                        filterable\r\n                                        pageSize={5}\r\n                                        showPageSizeOptions={false}\r\n                                        showPageJump={false}\r\n                                        showPaginationBottom={false}\r\n                                    />\r\n                                    <div style={{ paddingTop: '10px' }}>\r\n                                        <ButtonGroup size=\"lg\" className=\"mb-2\">\r\n                                            <Button className=\"btn-dashed\" color=\"primary\"\r\n                                                onClick={() => this.onRadioBtnClick(1, 'dandi')}\r\n                                                active={this.state.rSelected === 1}>First</Button>\r\n                                            <Button className=\"btn-dashed\" color=\"primary\"\r\n                                                onClick={() => this.onRadioBtnClick(2, 'deni')}\r\n                                                active={this.state.rSelected === 2}>Next</Button>\r\n                                            <Button className=\"btn-dashed\" color=\"primary\"\r\n                                                onClick={() => this.onRadioBtnClick(3, 'oke')}\r\n                                                active={this.state.rSelected === 3}>Previous</Button>\r\n                                            <Button className=\"btn-dashed\" color=\"primary\"\r\n                                                onClick={() => this.onRadioBtnClick(4, 'mantap')}\r\n                                                active={this.state.rSelected === 4}>last</Button>\r\n                                        </ButtonGroup>\r\n                                    </div>\r\n                                </CardBody>\r\n                            </Card>\r\n                        </Col>\r\n                    </Row>\r\n                </ReactCSSTransitionGroup>\r\n            </Fragment>\r\n        )\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}