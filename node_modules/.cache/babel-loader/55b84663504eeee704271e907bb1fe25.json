{"ast":null,"code":"import _assertThisInitialized from \"D:\\\\react\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nimport _toConsumableArray from \"D:\\\\react\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"D:\\\\react\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\react\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\react\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\react\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\react\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\react\\\\src\\\\DemoPages\\\\Dashboards\\\\CRM\\\\Examples\\\\Variation5.js\";\nimport React from 'react';\nvar propTypes = {\n  items: React.PropTypes.array.isRequired,\n  onChangePage: React.PropTypes.func.isRequired,\n  initialPage: React.PropTypes.number\n};\nvar defaultProps = {\n  initialPage: 1\n};\n\nvar Pagination =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Pagination, _React$Component);\n\n  function Pagination(props) {\n    var _this;\n\n    _classCallCheck(this, Pagination);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Pagination).call(this, props));\n    _this.state = {\n      pager: {}\n    };\n    return _this;\n  }\n\n  _createClass(Pagination, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      // set page if items array isn't empty\n      if (this.props.items && this.props.items.length) {\n        this.setPage(this.props.initialPage);\n      }\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      // reset page if items array has changed\n      if (this.props.items !== prevProps.items) {\n        this.setPage(this.props.initialPage);\n      }\n    }\n  }, {\n    key: \"setPage\",\n    value: function setPage(page) {\n      var items = this.props.items;\n      var pager = this.state.pager;\n\n      if (page < 1 || page > pager.totalPages) {\n        return;\n      } // get new pager object for specified page\n\n\n      pager = this.getPager(items.length, page); // get new page of items from items array\n\n      var pageOfItems = items.slice(pager.startIndex, pager.endIndex + 1); // update state\n\n      this.setState({\n        pager: pager\n      }); // call change page function in parent component\n\n      this.props.onChangePage(pageOfItems);\n    }\n  }, {\n    key: \"getPager\",\n    value: function getPager(totalItems, currentPage, pageSize) {\n      // default to first page\n      currentPage = currentPage || 1; // default page size is 10\n\n      pageSize = pageSize || 10; // calculate total pages\n\n      var totalPages = Math.ceil(totalItems / pageSize);\n      var startPage, endPage;\n\n      if (totalPages <= 10) {\n        // less than 10 total pages so show all\n        startPage = 1;\n        endPage = totalPages;\n      } else {\n        // more than 10 total pages so calculate start and end pages\n        if (currentPage <= 6) {\n          startPage = 1;\n          endPage = 10;\n        } else if (currentPage + 4 >= totalPages) {\n          startPage = totalPages - 9;\n          endPage = totalPages;\n        } else {\n          startPage = currentPage - 5;\n          endPage = currentPage + 4;\n        }\n      } // calculate start and end item indexes\n\n\n      var startIndex = (currentPage - 1) * pageSize;\n      var endIndex = Math.min(startIndex + pageSize - 1, totalItems - 1); // create an array of pages to ng-repeat in the pager control\n\n      var pages = _toConsumableArray(Array(endPage + 1 - startPage).keys()).map(function (i) {\n        return startPage + i;\n      }); // return object with all pager properties required by the view\n\n\n      return {\n        totalItems: totalItems,\n        currentPage: currentPage,\n        pageSize: pageSize,\n        totalPages: totalPages,\n        startPage: startPage,\n        endPage: endPage,\n        startIndex: startIndex,\n        endIndex: endIndex,\n        pages: pages\n      };\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var pager = this.state.pager;\n\n      if (!pager.pages || pager.pages.length <= 1) {\n        // don't display pager if there is only 1 page\n        return null;\n      }\n\n      return React.createElement(\"ul\", {\n        className: \"pagination\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, React.createElement(\"li\", {\n        className: pager.currentPage === 1 ? 'disabled' : '',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        onClick: function onClick() {\n          return _this2.setPage(1);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, \"First\")), React.createElement(\"li\", {\n        className: pager.currentPage === 1 ? 'disabled' : '',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        onClick: function onClick() {\n          return _this2.setPage(pager.currentPage - 1);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, \"Previous\")), pager.pages.map(function (page, index) {\n        return React.createElement(\"li\", {\n          key: index,\n          className: pager.currentPage === page ? 'active' : '',\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 121\n          },\n          __self: this\n        }, React.createElement(\"a\", {\n          onClick: function onClick() {\n            return _this2.setPage(page);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 122\n          },\n          __self: this\n        }, page));\n      }), React.createElement(\"li\", {\n        className: pager.currentPage === pager.totalPages ? 'disabled' : '',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        onClick: function onClick() {\n          return _this2.setPage(pager.currentPage + 1);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, \"Next\")), React.createElement(\"li\", {\n        className: pager.currentPage === pager.totalPages ? 'disabled' : '',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        onClick: function onClick() {\n          return _this2.setPage(pager.totalPages);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, \"Last\")));\n    }\n  }]);\n\n  return Pagination;\n}(React.Component);\n\nPagination.propTypes = propTypes;\nPagination.defaultProps = defaultProps;\n/* App Component \r\n-------------------------------------------------*/\n\nvar App =\n/*#__PURE__*/\nfunction (_React$Component2) {\n  _inherits(App, _React$Component2);\n\n  function App() {\n    var _this3;\n\n    _classCallCheck(this, App);\n\n    _this3 = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this)); // an example array of items to be paged\n\n    var exampleItems = _toConsumableArray(Array(150).keys()).map(function (i) {\n      return {\n        id: i + 1,\n        name: 'Item ' + (i + 1)\n      };\n    });\n\n    _this3.state = {\n      exampleItems: exampleItems,\n      pageOfItems: []\n    }; // bind function in constructor instead of render (https://github.com/yannickcr/eslint-plugin-react/blob/master/docs/rules/jsx-no-bind.md)\n\n    _this3.onChangePage = _this3.onChangePage.bind(_assertThisInitialized(_assertThisInitialized(_this3)));\n    return _this3;\n  }\n\n  _createClass(App, [{\n    key: \"onChangePage\",\n    value: function onChangePage(pageOfItems) {\n      // update state with new page of items\n      this.setState({\n        pageOfItems: pageOfItems\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }, \"React - Pagination Example with logic like Google\"), this.state.pageOfItems.map(function (item) {\n        return React.createElement(\"div\", {\n          key: item.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 171\n          },\n          __self: this\n        }, item.name);\n      }), React.createElement(Pagination, {\n        items: this.state.exampleItems,\n        onChangePage: this.onChangePage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }))), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"credits text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        href: \"http://jasonwatmore.com/post/2017/03/14/react-pagination-example-with-logic-like-google\",\n        target: \"_top\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      }, \"React - Pagination Example with Logic like Google\")), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        href: \"http://jasonwatmore.com\",\n        target: \"_top\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        },\n        __self: this\n      }, \"JasonWatmore.com\"))));\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nexport { App as default };","map":{"version":3,"sources":["D:\\react\\src\\DemoPages\\Dashboards\\CRM\\Examples\\Variation5.js"],"names":["React","propTypes","items","PropTypes","array","isRequired","onChangePage","func","initialPage","number","defaultProps","Pagination","props","state","pager","length","setPage","prevProps","prevState","page","totalPages","getPager","pageOfItems","slice","startIndex","endIndex","setState","totalItems","currentPage","pageSize","Math","ceil","startPage","endPage","min","pages","Array","keys","map","i","index","Component","App","exampleItems","id","name","bind","item"],"mappings":"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","sourcesContent":["import React from 'react';\r\n\r\nconst propTypes = {\r\n    items: React.PropTypes.array.isRequired,\r\n    onChangePage: React.PropTypes.func.isRequired,\r\n    initialPage: React.PropTypes.number\r\n}\r\n\r\nconst defaultProps = {\r\n    initialPage: 1\r\n}\r\n\r\nclass Pagination extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { pager: {} };\r\n    }\r\n\r\n    componentWillMount() {\r\n        // set page if items array isn't empty\r\n        if (this.props.items && this.props.items.length) {\r\n            this.setPage(this.props.initialPage);\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        // reset page if items array has changed\r\n        if (this.props.items !== prevProps.items) {\r\n            this.setPage(this.props.initialPage);\r\n        }\r\n    }\r\n\r\n    setPage(page) {\r\n        var items = this.props.items;\r\n        var pager = this.state.pager;\r\n\r\n        if (page < 1 || page > pager.totalPages) {\r\n            return;\r\n        }\r\n\r\n        // get new pager object for specified page\r\n        pager = this.getPager(items.length, page);\r\n\r\n        // get new page of items from items array\r\n        var pageOfItems = items.slice(pager.startIndex, pager.endIndex + 1);\r\n\r\n        // update state\r\n        this.setState({ pager: pager });\r\n\r\n        // call change page function in parent component\r\n        this.props.onChangePage(pageOfItems);\r\n    }\r\n\r\n    getPager(totalItems, currentPage, pageSize) {\r\n        // default to first page\r\n        currentPage = currentPage || 1;\r\n\r\n        // default page size is 10\r\n        pageSize = pageSize || 10;\r\n\r\n        // calculate total pages\r\n        var totalPages = Math.ceil(totalItems / pageSize);\r\n\r\n        var startPage, endPage;\r\n        if (totalPages <= 10) {\r\n            // less than 10 total pages so show all\r\n            startPage = 1;\r\n            endPage = totalPages;\r\n        } else {\r\n            // more than 10 total pages so calculate start and end pages\r\n            if (currentPage <= 6) {\r\n                startPage = 1;\r\n                endPage = 10;\r\n            } else if (currentPage + 4 >= totalPages) {\r\n                startPage = totalPages - 9;\r\n                endPage = totalPages;\r\n            } else {\r\n                startPage = currentPage - 5;\r\n                endPage = currentPage + 4;\r\n            }\r\n        }\r\n\r\n        // calculate start and end item indexes\r\n        var startIndex = (currentPage - 1) * pageSize;\r\n        var endIndex = Math.min(startIndex + pageSize - 1, totalItems - 1);\r\n\r\n        // create an array of pages to ng-repeat in the pager control\r\n        var pages = [...Array((endPage + 1) - startPage).keys()].map(i => startPage + i);\r\n\r\n        // return object with all pager properties required by the view\r\n        return {\r\n            totalItems: totalItems,\r\n            currentPage: currentPage,\r\n            pageSize: pageSize,\r\n            totalPages: totalPages,\r\n            startPage: startPage,\r\n            endPage: endPage,\r\n            startIndex: startIndex,\r\n            endIndex: endIndex,\r\n            pages: pages\r\n        };\r\n    }\r\n\r\n    render() {\r\n        var pager = this.state.pager;\r\n\r\n        if (!pager.pages || pager.pages.length <= 1) {\r\n            // don't display pager if there is only 1 page\r\n            return null;\r\n        }\r\n\r\n        return (\r\n            <ul className=\"pagination\">\r\n                <li className={pager.currentPage === 1 ? 'disabled' : ''}>\r\n                    <a onClick={() => this.setPage(1)}>First</a>\r\n                </li>\r\n                <li className={pager.currentPage === 1 ? 'disabled' : ''}>\r\n                    <a onClick={() => this.setPage(pager.currentPage - 1)}>Previous</a>\r\n                </li>\r\n                {pager.pages.map((page, index) =>\r\n                    <li key={index} className={pager.currentPage === page ? 'active' : ''}>\r\n                        <a onClick={() => this.setPage(page)}>{page}</a>\r\n                    </li>\r\n                )}\r\n                <li className={pager.currentPage === pager.totalPages ? 'disabled' : ''}>\r\n                    <a onClick={() => this.setPage(pager.currentPage + 1)}>Next</a>\r\n                </li>\r\n                <li className={pager.currentPage === pager.totalPages ? 'disabled' : ''}>\r\n                    <a onClick={() => this.setPage(pager.totalPages)}>Last</a>\r\n                </li>\r\n            </ul>\r\n        );\r\n    }\r\n}\r\n\r\nPagination.propTypes = propTypes;\r\nPagination.defaultProps = defaultProps;\r\n\r\n\r\n/* App Component \r\n-------------------------------------------------*/\r\n\r\nexport default class App extends React.Component {\r\n    constructor() {\r\n        super();\r\n\r\n        // an example array of items to be paged\r\n        var exampleItems = [...Array(150).keys()].map(i => ({ id: (i + 1), name: 'Item ' + (i + 1) }));\r\n\r\n        this.state = {\r\n            exampleItems: exampleItems,\r\n            pageOfItems: []\r\n        };\r\n\r\n        // bind function in constructor instead of render (https://github.com/yannickcr/eslint-plugin-react/blob/master/docs/rules/jsx-no-bind.md)\r\n        this.onChangePage = this.onChangePage.bind(this);\r\n    }\r\n\r\n    onChangePage(pageOfItems) {\r\n        // update state with new page of items\r\n        this.setState({ pageOfItems: pageOfItems });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"container\">\r\n                    <div className=\"text-center\">\r\n                        <h1>React - Pagination Example with logic like Google</h1>\r\n                        {this.state.pageOfItems.map(item =>\r\n                            <div key={item.id}>{item.name}</div>\r\n                        )}\r\n                        <Pagination items={this.state.exampleItems} onChangePage={this.onChangePage} />\r\n                    </div>\r\n                </div>\r\n                <hr />\r\n                <div className=\"credits text-center\">\r\n                    <p>\r\n                        <a href=\"http://jasonwatmore.com/post/2017/03/14/react-pagination-example-with-logic-like-google\" target=\"_top\">React - Pagination Example with Logic like Google</a>\r\n                    </p>\r\n                    <p>\r\n                        <a href=\"http://jasonwatmore.com\" target=\"_top\">JasonWatmore.com</a>\r\n                    </p>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}